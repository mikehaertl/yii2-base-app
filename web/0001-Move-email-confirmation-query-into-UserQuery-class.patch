From eedd62c7e3100efc770e16a6704f3eb8cb04ad93 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michael=20H=C3=A4rtl?= <haertl.mike@gmail.com>
Date: Fri, 27 Feb 2015 16:13:41 +0100
Subject: [PATCH] Move email confirmation query into UserQuery class

---
 controllers/SiteController.php |   31 +++++++++++++++++++++++++++++--
 models/User.php                |   20 +++++++++++++++++++-
 models/queries/UserQuery.php   |   16 ++++++++++++++++
 3 files changed, 64 insertions(+), 3 deletions(-)

diff --git a/controllers/SiteController.php b/controllers/SiteController.php
index 6944def..b472470 100644
--- a/controllers/SiteController.php
+++ b/controllers/SiteController.php
@@ -13,6 +13,9 @@ use app\models\ResetPasswordForm;
 
 class SiteController extends Controller
 {
+    /**
+     * @inheritdoc
+     */
     public function behaviors()
     {
         return [
@@ -41,6 +44,9 @@ class SiteController extends Controller
         ];
     }
 
+    /**
+     * @inheritdoc
+     */
     public function actions()
     {
         return [
@@ -50,11 +56,17 @@ class SiteController extends Controller
         ];
     }
 
+    /**
+     * Render the homepage
+     */
     public function actionIndex()
     {
         return $this->render('index');
     }
 
+    /**
+     * User login
+     */
     public function actionLogin()
     {
         if (!\Yii::$app->user->isGuest) {
@@ -71,6 +83,9 @@ class SiteController extends Controller
         }
     }
 
+    /**
+     * User logout
+     */
     public function actionLogout()
     {
         Yii::$app->user->logout();
@@ -78,6 +93,9 @@ class SiteController extends Controller
         return $this->goHome();
     }
 
+    /**
+     * User signup
+     */
     public function actionSignup()
     {
         $user = new User(['scenario' => 'signup']);
@@ -103,11 +121,14 @@ class SiteController extends Controller
         ]);
     }
 
+    /**
+     * Confirm email
+     */
     public function actionConfirmEmail($token)
     {
-        $user = User::confirmEmailByToken($token);
+        $user = User::find()->emailConfirmationToken($token)->one();
 
-        if ($user!==null) {
+        if ($user!==null && $user->removeEmailConfirmationToken(true)) {
             Yii::$app->getUser()->login($user);
             return $this->goHome();
         }
@@ -115,6 +136,9 @@ class SiteController extends Controller
         return $this->render('emailConfirmationFailed');
     }
 
+    /**
+     * Request password reset
+     */
     public function actionRequestPasswordReset()
     {
         $model = new PasswordResetRequestForm();
@@ -133,6 +157,9 @@ class SiteController extends Controller
         ]);
     }
 
+    /**
+     * Reset password
+     */
     public function actionResetPassword($token)
     {
         try {
diff --git a/models/User.php b/models/User.php
index 8db90d3..241715c 100644
--- a/models/User.php
+++ b/models/User.php
@@ -225,10 +225,28 @@ class User extends ActiveRecord implements IdentityInterface
 
     /**
      * Removes password reset token
+     * @param bool $save whether to save the record. Default is `false`.
+     * @return bool|null whether the save was successful or null if $save was false.
      */
-    public function removePasswordResetToken()
+    public function removePasswordResetToken($save = false)
     {
         $this->password_reset_token = null;
+        if ($save) {
+            return $this->save();
+        }
     }
 
+    /**
+     * Removes email confirmation token and sets is_email_verified to true
+     * @param bool $save whether to save the record. Default is `false`.
+     * @return bool|null whether the save was successful or null if $save was false.
+     */
+    public function removeEmailConfirmationToken($save = false)
+    {
+        $this->email_confirmation_token = null;
+        $this->is_email_verified = 1;
+        if ($save) {
+            return $this->save();
+        }
+    }
 }
diff --git a/models/queries/UserQuery.php b/models/queries/UserQuery.php
index 417eb33..1951f59 100644
--- a/models/queries/UserQuery.php
+++ b/models/queries/UserQuery.php
@@ -48,4 +48,20 @@ class UserQuery extends ActiveQuery
         }
         return $this->andWhere(['password_reset_token' => $token]);
     }
+
+    /**
+     * @param string $token the email confirmation token
+     * @return UserQuery the query with conditions for valid email confirmation token applied
+     */
+    public function emailConfirmationToken($token)
+    {
+        $expire = \Yii::$app->params['user.emailConfirmationTokenExpire'];
+        $parts = explode('_', $token);
+        $timestamp = (int) end($parts);
+        if ($timestamp + $expire < time()) {
+            // token expired
+            return $this->andWhere('FALSE');
+        }
+        return $this->andWhere(['email_confirmation_token' => $token]);
+    }
 }
-- 
1.7.9.5

